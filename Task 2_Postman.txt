{
	"info": {
		"_postman_id": "5982c335-e8ff-474f-9d91-a569ce93efdb",
		"name": "Task2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"json structure in the response\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.age).to.be.a(\"Number\");\r",
							"    pm.expect(jsonData.name).to.be.a(\"String\");\r",
							"    pm.expect(jsonData.salary).to.be.a(\"Array\");\r",
							"    pm.expect(jsonData.salary[0]).to.be.a(\"Number\");\r",
							"    pm.expect(jsonData.salary[1]).to.be.a(\"String\");\r",
							"    pm.expect(jsonData.salary[2]).to.be.a(\"String\")\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"    \r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\"age\": {\"type\": \"integer\"},\r",
							"                   \"name\": {\"type\": \"string\"},\r",
							"                   \"salary\": {\"type\": \"array\",\r",
							"                   \"items\": [{\"type\": \"integer\"},\r",
							"                              {\"type\": \"string\"},\r",
							"                              {\"type\": \"string\"}\r",
							"                   ]\r",
							"            }\r",
							"            },\r",
							"     \"required\": [\r",
							"        \"age\",\r",
							"        \"name\",\r",
							"        \"salary\"\r",
							"    ]           \r",
							"}\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    var data1 = JSON.parse(responseBody);\r",
							"    pm.expect(tv4.validate(data1, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"*4\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.salary[1]).to.eql(parseInt(jsonData.salary[0]*2).toString());\r",
							"});\r",
							"\r",
							"pm.test(\"*2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.salary[2]).to.eql(parseInt(jsonData.salary[0]*3).toString());\r",
							"});\r",
							"\r",
							"pm.test(\"[2] bigger then [1,0]\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(parseFloat(jsonData.salary[2])).to.be.above(parseFloat(jsonData.salary[1,0]))\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable (\"name\", jsonData.name)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "27",
							"type": "text"
						},
						{
							"key": "name",
							"value": "HelenKholkina",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "3500",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/new_data",
					"host": [
						"{{url}}"
					],
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		}
	]
}